Detailed class models that include all methods, attributes, dependencies, and associations.
The specific algorithms that a component employs and how they work.


	PlayerController
		Moves the player forwards.
		




















Summary:
	Clouds will be pooled, and spawn in front of the player some distance away. 
	Then they will disappear when they go past the player.
	
	Above is a skybox, sunlight coming from some angle behind maybe?
	Volumetric lighting.
	Below is a planet (earth-like) rotating as the player goes forwards.
	
	
Controls:
	Continuous forwards running without the ability to stop.
	First person controller (mouse view)
	Automatic jump button (Space)
	Player speed increases after each succeeding "direct"/automatic jump, and resets if no jump is done in time.
	
	
Platforms:
	Clouds big and small. 
	Some would start falling once put any weight on, others disappear almost immediately.
	
	
Difficulty:
	The clouds get spawned increasingly sparsingly. Aka bigger gaps.
	Less clouds.
	Smaller clouds.
	Height variation.
	
	Rain (limits visibility)
	Fog (limits vision distance)
	Wind (pushes the player to one side)
	
	
Start:
	Main menu, has settings for mouse speed and shows the best score.
	Start hopping button -> Fade to game and show "Press SPACE to hop!"
	
	
End:
	Player falls off -> fade to menu.
	Score is shown and if it is the best score, save it to player prefs and play confetti.
	
	
Ideas:
	- Maybe a dash button (Ctrl or shift)
	- Maybe a double jump powerup
	
	